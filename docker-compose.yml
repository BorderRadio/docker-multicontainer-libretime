version: '3'

services:
  libretime-postgres:
    image: postgres:9.3-alpine
    container_name: libretime-postgres
    restart: always
    privileged: true

    environment:
      - "POSTGRES_USER=${POSTGRES_USER-libretime}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD-libretime}"
      - "PGDATA=/postgres_data"

    volumes:
      - ./postgresql:/postgres_data

    networks:
      - libretime-internal

    ports:
      # Postgre port mapped to non-standard port (for external admin access) - Internal access is via the internal docker network
      - 5433:5432

  libretime-rabbitmq:
    image: rabbitmq:3.6-alpine
    container_name: libretime-rabbitmq
    restart: always
    privileged: true

    environment:
      - "RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER-libretime}"
      - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS-libretime}"
      - "RABBITMQ_DEFAULT_VHOST=/libretime"

    networks:
      - libretime-internal

  libretime-icecast:
    image: infiniteproject/icecast:latest
    container_name: libretime-icecast
    restart: always
    privileged: true

    environment:
      - "ICECAST_ADMIN_PASSWORD=${ICECAST_ADMIN_PASSWORD-admin}"
      - "ICECAST_ADMIN_USERNAME=${ICECAST_ADMIN_USERNAME-hackme}"
      - "ICECAST_ADMIN_EMAIL=${ICECAST_ADMIN_EMAIL-icemaster@example.com}"
      - "ICECAST_HOSTNAME=${ICECAST_HOSTNAME-icecast.your-fqdn.com}"
      - "ICECAST_LOCATION=${ICECAST_LOCATION-Mars}"
      - "ICECAST_MAX_CLIENTS=${ICECAST_MAX_CLIENTS-250}"
      - "ICECAST_MAX_SOURCES=${ICECAST_MAX_SOURCES-3}"
      - "ICECAST_SOURCE_PASSWORD=${ICECAST_SOURCE_PASSWORD-hackme}"
      - "ICECAST_RELAY_PASSWORD=${ICECAST_RELAY_PASSWORD-hackme}"

    ports:

      # Icecast alternative port (probably good to expose this one to the web)
      - 35112:35112

      # The Icecast Default Port (mapping through for local clients that may require :8000)
      - 8000:35112

    volumes:
      - ${ICECAST_CONFIG_FILE-./config/icecast-example.xml}:/etc/icecast.xml
    networks:
      - libretime-internal

  libretime-core:
    # Uncomment to build locally
    # build: .

    # Comment out if you want to use the local build rather than what's on docker-hub.
    image: bushrangers/ubuntu-multicontainer-libretime:latest

    container_name: libretime-core
    restart: always
    privileged:  true

    ports:
      # Master & Show Source Inputs:
      - ${MASTER_SOURCE_PORT-8001}:8001
      - ${DJ_SOURCE_PORT-8002}:8002

      # Port at which the LibreTime web interface should be served
      - ${WEB_UI_PORT-8882}:80

    environment:

      #### NOTE: ####
      #
      # For detailed configuration, please edit the `config/airtime/airtime.conf` file once the container has started for the first time.
      # The configuration variables here will over-write your airtime.conf file on the server when booting.
      #
      ########################################################################################

      # There's some apache fixes that are applied here so that you can expose the site on the internet - Specify the public FQDN name of your server here.
      - "EXTERNAL_HOSTNAME=${EXTERNAL_HOSTNAME-localhost}"

      # Don't change these unless you change their values in the `libretime-rabbitmq` block.
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER-libretime}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS-libretime}
      - RABBITMQ_DEFAULT_VHOST=/libretime

      - POSTGRES_USER=${POSTGRES_USER-libretime}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-libretime}
      - POSTGRES_DB_NAME=libretime

      # Leave as default if you're not planning on using AWS S3, otherwise set your AWS credentials to auto-upload your recordings etc to S3.
      - "AWS_S3_API_KEY=0"
      - "AWS_S3_API_SECRET=0"
      - "AWS_S3_BUCKET_NAME=0"

    volumes:
      
      # This structure has not yet been renamed in the fork of libretime from airtime.
      - ./config/airtime:/etc/airtime

      # Airtime customisations directory...
      - ./customisations:/etc/airtime-customisations

      # NB: Libretime will create some directories in this location (for user uploads, recorded podcasts etc)
      # Change the `/localmusic` part of this directive to the location of your media files..
      - ${LOCAL_MUSIC_MAPPING-./localmusic}:/external-media

    networks:
      - libretime-internal
      - libretime

  ## UNCOMMENT IF YOU WANT TO SEND YOUR ICECAST LISTENER STATS UP TO GOOGLE ANALTYICS 
  # icecast-analytics:

  #   image: bushrangers/docker-icecast-google-analytics:latest

  #   container_name: icecast-analytics
  #   restart: always
  #   privileged:  true
  #   network_mode: host

  ## PLEASE CONFIGURE THE "icecast-ga-config.xml" FILE BEFORE USING THIS CONTAINER
  #   volumes:
  # - ./config/icecast-ga-config.xml:/config/config.xml

networks:
  libretime-internal:
    driver: bridge
  libretime:
    external: true
